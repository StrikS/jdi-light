# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven
env:
    CHROME_PROPERTIES: "chrome.properties"
    FIREFOX_PROPERTIES: "ff.properties"
    #WITH_PARAMS: "-ntp -Ddriver=chrome"
    WITH_PARAMS: "-ntp -Ddriver=firefox"
    UNIT: "-Punit"
    COMMON: "-Pcommon"
    COMPLEX: "-Pcomplex"
    GROUP_ID: "com.epam.jdi"
    NOPO_TESTS: "jdi-bdd-no-po-tests"
    NOPO_TESTS_PROPERTY: "test-examples/jdi-bdd-no-po-tests"
    BDD_TESTS: "jdi-bdd-tests"
    BOOTSTRAP_TESTS: "jdi-light-bootstrap-tests"
    HTML_TESTS: "jdi-light-html-tests"
    ANGULAR_TESTS: "jdi-light-angular-tests"
    ANGULAR_TESTS_WITH_MOCKS: "jdi-light-angular-tests-with-mocks"
    EXAMPLES: "jdi-light-examples"
    EXAMPLES_PROPERTY: "test-examples/jdi-light-examples"
    PERFORMANCE: "jdi-performance"
    PERFORMANCE_PROPERTY: "test-examples/jdi-performance"
    CHROME_ARGS: "--no-sandbox --headless --disable-dev-shm-usage --disable-gpu --window-size=1920,1080"
    FIREFOX_ARGS: "-headless"
    ALLURE_VERSION: "2.7.0"

on:
  push:
    branches: [ test_ga ]

jobs:
  build:

    runs-on: ubuntu-18.04
    strategy:
      matrix:
        java: [8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
        java-package: jdk

    - name: Prepare environment
      run: |
        java -Xmx32m -version
        ls -lah
        env
        id

    - name: Install Allure
      run: |
        curl -o allure-${ALLURE_VERSION}.tgz -Ls https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz
        sudo tar -zxvf allure-${ALLURE_VERSION}.tgz -C /opt/
        sudo ln -s /opt/allure-${ALLURE_VERSION}/bin/allure /usr/bin/allure
        allure --version

    - name: Install Netlify
      run: sudo npm install -g netlify-cli

    - name: Welcome to JDI
      run: |
        echo ------------------- WELCOME TO JDI -----------------------
        mvn --version

    - name: Prepare configs
      run: |
        echo arguments=$CHROME_ARGS > "./${BDD_TESTS}/src/test/resources/${CHROME_PROPERTIES}"
        echo arguments=$FIREFOX_ARGS > "./${BDD_TESTS}/src/test/resources/${FIREFOX_PROPERTIES}"
        echo arguments=$CHROME_ARGS > "./${BOOTSTRAP_TESTS}/src/test/resources/${CHROME_PROPERTIES}"
        echo arguments=$FIREFOX_ARGS > "./${BOOTSTRAP_TESTS}/src/test/resources/${FIREFOX_PROPERTIES}"
        echo arguments=$CHROME_ARGS > "./${ANGULAR_TESTS}/src/test/resources/${CHROME_PROPERTIES}"
        echo arguments=$FIREFOX_ARGS > "./${ANGULAR_TESTS}/src/test/resources/${FIREFOX_PROPERTIES}"

    - name: Compile jdi code
      run: mvn -ntp install -DskipTests

    - name: Tests BDD
      continue-on-error: true
      run: |
          mvn verify $WITH_PARAMS -Dchrome.capabilities.path=${CHROME_PROPERTIES} -Dff.capabilities.path=${FIREFOX_PROPERTIES} -pl $GROUP_ID:$BDD_TESTS

    - name: Archive results BDD tests
      continue-on-error: true
      run: |
          tar -czf "bdd_results_${{ matrix.java }}.tar" ./${BDD_TESTS}/target/allure-results/ > /dev/null

    - name: 'Upload BDD results'
      uses: actions/upload-artifact@v2
      with:
        name: bdd-results-${{ matrix.java }}
        path: "bdd_results_${{ matrix.java }}.tar"
        retention-days: 1

    - name: PS list to check browsers
      run: ps -aux
    
    - name: Tests bootstrap Unit
      continue-on-error: true
      run: mvn verify $WITH_PARAMS -Dchrome.capabilities.path=${CHROME_PROPERTIES} -Dff.capabilities.path=${FIREFOX_PROPERTIES} -pl $GROUP_ID:$BOOTSTRAP_TESTS

#    - name: Archive results bootstrap tests
#      continue-on-error: true
#      run: |
#        tar -czf "bootstrap_results_${{ matrix.java }}.tar" ./${BOOTSTRAP_TESTS}/target/allure-results/ > /dev/null

#    - name: 'Upload Bootstrap results'
#      uses: actions/upload-artifact@v2
#      with:
#        name: bootstrap-results-${{ matrix.java }}
#        path: "bootstrap_results_${{ matrix.java }}.tar"
#        retention-days: 2

#    - name: Run tests - angular unit tests
#      continue-on-error: true
#      run: mvn verify $WITH_PARAMS $UNIT -pl $GROUP_ID:$ANGULAR_TESTS
    - name: PS list to check browsers
      run: ps -aux

    - name: Collect reports
      continue-on-error: true
      run: |
        echo Collecting Allure Reports....
        sudo chmod +x reporting.sh
        ls -d1 jdi*/target/allure-results
        source reporting.sh
        generateAllureReports
        tar -czf "allure_report_${{ matrix.java }}.tar" ./allure-report/ > /dev/null

    - name: 'All allure report'
      uses: actions/upload-artifact@v2
      with:
        name: allure-report-${{ matrix.java }}
        path: "./allure_report/"
        retention-days: 1